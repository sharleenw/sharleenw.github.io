{
  "hash": "239885f866779e5930677387c0666a3d",
  "result": {
    "markdown": "---\ntitle: 'Hamilton Christmas Bird Count: Part 2a'\nauthor: Sharleen Weatherley\ndate: '2019-02-23'\ndescription: Further cleaning of the Hamilton Christmas Bird Count data.\nimage: \"image.jpg\"\nimage-alt: \"A Northern Cardinal in winter (Source: Public Domain Files)\"\ncategories: [data cleaning, birding]\n---\n\n::: {.cell}\n\n:::\n\n\n::: {.well .alert .alert-info role=\"alert\"}\nThis is a series of five posts for this data:\n\n-   [Part 1](../2019-01-07-hamilton-cbc-part-1/): data downloading and cleaning\n\n-   [Part 2a](../2019-02-23-hamilton-cbc-part-2a/): more cleaning\n\n-   [Part 2b](../2019-02-24-hamilton-cbc-part-2b/): visualizing\n\n-   [Part 3](../2019-03-24-hamilton-cbc-part-3/): a Shiny app\n\n-   [Part 4](../2019-05-26-hamilton-cbc-part-4/): a `gganimate` plot\n:::\n\n# Introduction\n\nWhile I was visualizing the data, I realized I still needed to do a bit more cleaning. So this is a short post outlining my steps to do so.\n\nTo start, we'll load all of the packages and the data:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20,868 Ã— 6\n    year species        species_latin     how_many_counted total_hours\n   <int> <chr>          <chr>                        <int>       <dbl>\n 1  1921 \"Snow Goose\\r\" Chen caerulescens                0           8\n 2  1922 \"Snow Goose\\r\" Chen caerulescens                0          NA\n 3  1924 \"Snow Goose\\r\" Chen caerulescens                0          NA\n 4  1925 \"Snow Goose\\r\" Chen caerulescens                0          NA\n 5  1926 \"Snow Goose\\r\" Chen caerulescens                0          NA\n 6  1928 \"Snow Goose\\r\" Chen caerulescens                0          NA\n 7  1930 \"Snow Goose\\r\" Chen caerulescens                0          NA\n 8  1931 \"Snow Goose\\r\" Chen caerulescens                0          NA\n 9  1932 \"Snow Goose\\r\" Chen caerulescens                0          NA\n10  1933 \"Snow Goose\\r\" Chen caerulescens                0          NA\n# â„¹ 20,858 more rows\n# â„¹ 1 more variable: how_many_counted_by_hour <dbl>\n```\n:::\n:::\n\n\n# Final cleaning touches\n\nParticularly, I want to:\n\n1.  Remove `hybrid` birds\n\n2.  Consolidate the names of some species that had variations in them\n\nLet's see how many hybrid species we have and remove them:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc <- hamilton_cbc %>%\n  mutate(species = str_remove(species, \"\\r\"))  # Remove the trailing \"\\r\"\n\nhamilton_cbc %>%\n  filter(str_detect(species, \"hybrid\")) %>%\n  distinct(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 1\n  species                                   \n  <chr>                                     \n1 Snow x Canada Goose (hybrid)              \n2 American Black Duck x Mallard (hybrid)    \n3 Mallard x Northern Pintail (hybrid)       \n4 Herring x Glaucous Gull (hybrid)          \n5 Herring x Great Black-backed Gull (hybrid)\n```\n:::\n\n```{.r .cell-code}\nhamilton_cbc <- hamilton_cbc %>%\n  filter(!str_detect(species, \"hybrid\"))\n```\n:::\n\n\nNow, onto cleaning the trickier stuff. Sometimes, species have sub-species names or groups that have different total counts. For example, the Juncos (where `total_counted` is the sum of the counts over all years for that species):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc %>%\n  filter(str_detect(species, \"Junco\")) %>%\n  group_by(species, species_latin) %>%\n  summarise(total_counted = sum(how_many_counted)) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 Ã— 3\n  species                         species_latin                    total_counted\n  <chr>                           <chr>                                    <int>\n1 Dark-eyed Junco                 Junco hyemalis                           14426\n2 Dark-eyed Junco (Oregon)        Junco hyemalis [oreganus Group              39\n3 Dark-eyed Junco (Slate-colored) Junco hyemalis hyemalis/carolinâ€¦         46764\n4 Dark-eyed Junco (White-winged)  Junco hyemalis aikeni                        1\n```\n:::\n:::\n\n\nI just want there to be one Dark-eyed Junco species in this dataset, so I am going to consolidate these four sub-species into one species. (Even though people get way more excited about seeing the Oregon sub-species in Hamilton than the Slate-colored ðŸ˜„.)\n\nThe first step is to only keep the first two words of the `species_latin` variable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc <- hamilton_cbc %>%\n  mutate(species_latin = word(species_latin, start = 1, end = 2))\n```\n:::\n\n\nWe can also see who else is in this list:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc %>%\n  group_by(species_latin) %>%\n  filter(n_distinct(species) > 1) %>%\n  group_by(species, species_latin) %>%\n  summarise(total_counted = sum(how_many_counted)) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26 Ã— 3\n   species                         species_latin      total_counted\n   <chr>                           <chr>                      <int>\n 1 American Kestrel                Falco sparverius            1520\n 2 American Kestrel (Northern)     Falco sparverius               4\n 3 Brant                           Branta bernicla                8\n 4 Brant (Atlantic)                Branta bernicla                1\n 5 Common Grackle                  Quiscalus quiscula           173\n 6 Common Grackle (Purple)         Quiscalus quiscula            17\n 7 Dark-eyed Junco                 Junco hyemalis             14426\n 8 Dark-eyed Junco (Oregon)        Junco hyemalis                39\n 9 Dark-eyed Junco (Slate-colored) Junco hyemalis             46764\n10 Dark-eyed Junco (White-winged)  Junco hyemalis                 1\n# â„¹ 16 more rows\n```\n:::\n:::\n\n\nThe second step is to sum up the counts for each year across all of the sub-species so the counts are the same, and then filter to only keep the first instance of each `species` (which, when arranged alphabetically, is the shortest species name):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc <- hamilton_cbc %>%\n  group_by(year, species_latin) %>%\n  mutate(how_many_counted = sum(how_many_counted)) %>%\n  arrange(year, species) %>%\n  filter(row_number() == 1) %>%\n  ungroup()\n\nhamilton_cbc %>%\n  filter(str_detect(species, \"Junco\")) %>%\n  group_by(species, species_latin) %>%\n  summarise(total_counted = sum(how_many_counted)) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 3\n  species         species_latin  total_counted\n  <chr>           <chr>                  <int>\n1 Dark-eyed Junco Junco hyemalis         61230\n```\n:::\n:::\n\n\nPerfect! No more sub-species. The last group of species to deal with is `species` where the name has either a `(` or a `/`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc %>%\n  group_by(species, species_latin) %>%\n  summarise(total_counted = sum(how_many_counted)) %>%\n  ungroup() %>%\n  filter(str_detect(species, \"\\\\(|/\"))  # The \"|\" is an \"or\" within the regex\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 Ã— 3\n   species                                      species_latin      total_counted\n   <chr>                                        <chr>                      <int>\n 1 Barn Owl (American)                          Tyto alba                      1\n 2 Bullock's/Baltimore Oriole                   Icterus bullockiiâ€¦             1\n 3 Great Blue Heron (Blue form)                 Ardea herodias               362\n 4 Greater/Lesser Scaup                         Aythya marila/affâ€¦         26558\n 5 Pacific/Winter Wren                          Troglodytes pacifâ€¦           498\n 6 Palm Warbler (Western)                       Setophaga palmarum             1\n 7 Rock Pigeon (Feral Pigeon)                   Columba livia              60114\n 8 Spotted/Eastern Towhee (Rufous-sided Towhee) Pipilo maculatus/â€¦            28\n 9 Western/Eastern Meadowlark                   Sturnella neglectâ€¦            49\n10 Wilson's/Common Snipe                        Gallinago delicatâ€¦            13\n11 Yellow-rumped Warbler (Myrtle)               Setophaga coronata            65\n```\n:::\n:::\n\n\nI am going to make some executive decisions about what to do with these `species`:\n\n1.  Delete species guess: Greater/Lesser Scaup\n2.  Assume super-rare species were in fact the more common species:\n    -   Bullock's/Baltimore Oriole were Baltimore Orioles\n    -   Western/Eastern Meadowlark were Eastern Meadowlarks\n    -   Wilson's/Common Snipe were Common Snipes\n    -   Spotted/Eastern Towhee (Rufous-sided Towhee) were Eastern Towhees\n    -   Pacific/Winter Wren were Winter Wrens\n3.  Remove parentheses on the remaining species for neatness\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc <- hamilton_cbc %>%\n  filter(!(species == \"Greater/Lesser Scaup\")) %>%\n  mutate(species = case_when(species == \"Bullock's/Baltimore Oriole\" ~ \"Baltimore Oriole\",\n                             species == \"Western/Eastern Meadowlark\" ~ \"Eastern Meadowlark\",\n                             species == \"Wilson's/Common Snipe\" ~ \"Common Snipe\",\n                             species == \"Spotted/Eastern Towhee (Rufous-sided Towhee)\" ~ \"Eastern Towhee\",\n                             species == \"Pacific/Winter Wren\" ~ \"Winter Wren\",\n                             TRUE ~ species),\n         species_latin = case_when(species_latin == \"Icterus bullockii/galbula\" ~ \"Icterus galbula\",\n                             species_latin == \"Sturnella neglecta/magna\" ~ \"Sturnella magna\",\n                             species_latin == \"Gallinago delicata/gallinago\" ~ \"Gallinago gallinago\",\n                             species_latin == \"Pipilo maculatus/erythrophthalmus\" ~ \"Pipilo erythrophthalmus\",\n                             species_latin == \"Troglodytes pacificus/hiemalis\" ~ \"Troglodytes hiemalis\",\n                             TRUE ~ species_latin),\n         species = case_when(species == \"Barn Owl (American)\" ~ \"Barn Owl\",\n                             species == \"Great Blue Heron (Blue form)\" ~ \"Great Blue Heron\",\n                             species == \"Palm Warbler (Western)\" ~ \"Palm Warbler\",\n                             species == \"Rock Pigeon (Feral Pigeon)\" ~ \"Rock Pigeon\",\n                             species == \"Yellow-rumped Warbler (Myrtle)\" ~ \"Yellow-rumped Warbler\",\n                             TRUE ~ species))\n\n# Consolidate the counts between the species whose names were just updated\n# This is the same step as was done in the earlier sub-species section\nhamilton_cbc <- hamilton_cbc %>%\n  group_by(year, species) %>%\n  mutate(how_many_counted = sum(how_many_counted)) %>%\n  arrange(year, species) %>%\n  filter(row_number() == 1) %>%\n  ungroup()\n```\n:::\n\n\nFinally, I am going to recalculate the `how_many_counted_by_hour` variable that depends on `how_many_counted`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhamilton_cbc <- hamilton_cbc %>%\n  mutate(how_many_counted_by_hour = as.double(how_many_counted) / total_hours)\n```\n:::\n\n\n## Number of species counted each year\n\nIn the course of creating a plot, I believe there was a error in the total hours recorded for 1982, where the total number of hours was only 64, but there was no drop in the number of species counted that year. I think it should have actually been 164 hours, because, in 1981, there were 167 hours, and in 1983, there were 168 hours. So, in the below chunk, I've `mutate`d 1982 to have 164 total hours.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mutating total_hours and how_many_counted_by_hour that depends on it\n\nhamilton_cbc <- hamilton_cbc %>%\n  mutate(total_hours = ifelse(year == 1982, 164, total_hours),\n         how_many_counted_by_hour = as.double(how_many_counted) / total_hours)\n```\n:::\n\n\nIf you would like to download this final, cleaned dataset in `.rds` format, you can do so [here](https://github.com/sharleenw/sharleenw.github.io/blob/main/posts/2019-03-24-hamilton-cbc-part-3/hamilton_cbc_shiny/hamilton_cbc_output_part_2.rds).\n\nWe are now ready to visualize! Please look at the next post in this series for the visualizing!\n\nAnd thank you to the Christmas Bird Count! The Christmas Bird Count Data was provided by [National Audubon Society](www.christmasbirdcount.org) and through the generous efforts of [Bird Studies Canada](www.bsc-eoc.org) and countless volunteers across the western hemisphere.\n\n\n\n\n\n<hr>\n\n# Session info\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nâ”€ Session info â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n setting  value\n version  R version 4.3.0 (2023-04-21 ucrt)\n os       Windows 11 x64 (build 22000)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_Canada.utf8\n ctype    English_Canada.utf8\n tz       Pacific/Honolulu\n date     2023-09-21\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\nâ”€ Packages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n package     * version    date (UTC) lib source\n assertthat    0.2.1      2019-03-21 [1] CRAN (R 4.3.1)\n cachem        1.0.8      2023-05-01 [1] CRAN (R 4.3.0)\n callr         3.7.3      2022-11-02 [1] CRAN (R 4.3.0)\n cli           3.6.1      2023-03-23 [1] CRAN (R 4.3.0)\n crayon        1.5.2      2022-09-29 [1] CRAN (R 4.3.0)\n devtools    * 2.4.5      2022-10-11 [1] CRAN (R 4.3.1)\n digest        0.6.31     2022-12-11 [1] CRAN (R 4.3.0)\n dplyr       * 1.1.2      2023-04-20 [1] CRAN (R 4.3.0)\n ellipsis      0.3.2      2021-04-29 [1] CRAN (R 4.3.0)\n emo         * 0.0.0.9000 2023-07-22 [1] Github (hadley/emo@3f03b11)\n evaluate      0.20       2023-01-17 [1] CRAN (R 4.3.0)\n fansi         1.0.4      2023-01-22 [1] CRAN (R 4.3.0)\n fastmap       1.1.1      2023-02-24 [1] CRAN (R 4.3.0)\n fs            1.6.2      2023-04-25 [1] CRAN (R 4.3.0)\n generics      0.1.3      2022-07-05 [1] CRAN (R 4.3.0)\n glue          1.6.2      2022-02-24 [1] CRAN (R 4.3.0)\n here        * 1.0.1      2020-12-13 [1] CRAN (R 4.3.0)\n hms           1.1.3      2023-03-21 [1] CRAN (R 4.3.0)\n htmltools     0.5.5      2023-03-23 [1] CRAN (R 4.3.0)\n htmlwidgets   1.6.2      2023-03-17 [1] CRAN (R 4.3.0)\n httpuv        1.6.11     2023-05-11 [1] CRAN (R 4.3.1)\n jsonlite      1.8.4      2022-12-06 [1] CRAN (R 4.3.0)\n knitr         1.42       2023-01-25 [1] CRAN (R 4.3.0)\n later         1.3.1      2023-05-02 [1] CRAN (R 4.3.0)\n lifecycle     1.0.3      2022-10-07 [1] CRAN (R 4.3.0)\n lubridate     1.9.2      2023-02-10 [1] CRAN (R 4.3.0)\n magrittr      2.0.3      2022-03-30 [1] CRAN (R 4.3.0)\n memoise       2.0.1      2021-11-26 [1] CRAN (R 4.3.0)\n mime          0.12       2021-09-28 [1] CRAN (R 4.3.0)\n miniUI        0.1.1.1    2018-05-18 [1] CRAN (R 4.3.0)\n pillar        1.9.0      2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild      1.4.0      2022-11-27 [1] CRAN (R 4.3.0)\n pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 4.3.0)\n pkgload       1.3.2      2022-11-16 [1] CRAN (R 4.3.0)\n prettyunits   1.1.1      2020-01-24 [1] CRAN (R 4.3.0)\n processx      3.8.1      2023-04-18 [1] CRAN (R 4.3.0)\n profvis       0.3.8      2023-05-02 [1] CRAN (R 4.3.0)\n promises      1.2.0.1    2021-02-11 [1] CRAN (R 4.3.0)\n ps            1.7.5      2023-04-18 [1] CRAN (R 4.3.0)\n purrr         1.0.1      2023-01-10 [1] CRAN (R 4.3.0)\n R6            2.5.1      2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp          1.0.10     2023-01-22 [1] CRAN (R 4.3.0)\n readr       * 2.1.4      2023-02-10 [1] CRAN (R 4.3.0)\n remotes       2.4.2      2021-11-30 [1] CRAN (R 4.3.0)\n rlang         1.1.1      2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown     2.21       2023-03-26 [1] CRAN (R 4.3.0)\n rprojroot     2.0.3      2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi    0.15.0     2023-07-07 [1] CRAN (R 4.3.1)\n sessioninfo   1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n shiny         1.7.4      2022-12-15 [1] CRAN (R 4.3.0)\n stringi       1.7.12     2023-01-11 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0      2022-12-02 [1] CRAN (R 4.3.0)\n tibble        3.2.1      2023-03-20 [1] CRAN (R 4.3.0)\n tidyselect    1.2.0      2022-10-10 [1] CRAN (R 4.3.0)\n timechange    0.2.0      2023-01-11 [1] CRAN (R 4.3.0)\n tzdb          0.3.0      2022-03-28 [1] CRAN (R 4.3.0)\n urlchecker    1.0.1      2021-11-30 [1] CRAN (R 4.3.0)\n usethis     * 2.2.2      2023-07-06 [1] CRAN (R 4.3.1)\n utf8          1.2.3      2023-01-31 [1] CRAN (R 4.3.0)\n vctrs         0.6.2      2023-04-19 [1] CRAN (R 4.3.0)\n xfun          0.39       2023-04-20 [1] CRAN (R 4.3.0)\n xtable        1.8-4      2019-04-21 [1] CRAN (R 4.3.0)\n yaml          2.3.7      2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] C:/Users/sharl/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.0/library\n\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}