---
title: 'Hamilton Christmas Bird Count: Part 2a'
author: Sharleen Weatherley
date: '2019-02-23'
description: Further cleaning of the Hamilton Christmas Bird Count data.
image: "image.jpg"
image-alt: "A Northern Cardinal in winter (Source: Public Domain Files)"
categories: [data cleaning, birding]
---

```{r setup, echo = FALSE, warning = FALSE, message = FALSE}

knitr::opts_chunk$set(
  comment = "",
  warning = FALSE,
  echo = TRUE,
  message = FALSE
)

library(emo)  # for emojis
library(devtools) # for session_info()

# `r emo::ji("smile")`  # Function call for emojis
```

::: {.well .alert .alert-info role="alert"}
This is a series of five posts for this data:

-   [Part 1](../2019-01-07-hamilton-cbc-part-1/): data downloading and cleaning

-   [Part 2a](../2019-02-23-hamilton-cbc-part-2a/): more cleaning

-   [Part 2b](../2019-02-24-hamilton-cbc-part-2b/): visualizing

-   [Part 3](../2019-03-24-hamilton-cbc-part-3/): a Shiny app

-   [Part 4](../2019-05-26-hamilton-cbc-part-4/): a `gganimate` plot
:::

# Introduction

While I was visualizing the data, I realized I still needed to do a bit more cleaning. So this is a short post outlining my steps to do so.

To start, we'll load all of the packages and the data:

```{r read_the_data, message = FALSE, warning = FALSE, echo = FALSE}

library(dplyr)
library(readr)
library(stringr)
library(here)


hamilton_cbc <- read_rds(here("posts",
                              "2019-03-24-hamilton-cbc-part-3",
                              "hamilton_cbc_shiny",
                              "hamilton_cbc_output.rds"))

hamilton_cbc

```

# Final cleaning touches

Particularly, I want to:

1.  Remove `hybrid` birds

2.  Consolidate the names of some species that had variations in them

Let's see how many hybrid species we have and remove them:

```{r hybrid_removal}

hamilton_cbc <- hamilton_cbc %>%
  mutate(species = str_remove(species, "\r"))  # Remove the trailing "\r"

hamilton_cbc %>%
  filter(str_detect(species, "hybrid")) %>%
  distinct(species)

hamilton_cbc <- hamilton_cbc %>%
  filter(!str_detect(species, "hybrid"))

```

Now, onto cleaning the trickier stuff. Sometimes, species have sub-species names or groups that have different total counts. For example, the Juncos (where `total_counted` is the sum of the counts over all years for that species):

```{r junco}

hamilton_cbc %>%
  filter(str_detect(species, "Junco")) %>%
  group_by(species, species_latin) %>%
  summarise(total_counted = sum(how_many_counted)) %>%
  ungroup()

```

I just want there to be one Dark-eyed Junco species in this dataset, so I am going to consolidate these four sub-species into one species. (Even though people get way more excited about seeing the Oregon sub-species in Hamilton than the Slate-colored `r emo::ji("smile")`.)

The first step is to only keep the first two words of the `species_latin` variable:

```{r species_latin_keep_two_words}

hamilton_cbc <- hamilton_cbc %>%
  mutate(species_latin = word(species_latin, start = 1, end = 2))

```

We can also see who else is in this list:

```{r multiple_species}

hamilton_cbc %>%
  group_by(species_latin) %>%
  filter(n_distinct(species) > 1) %>%
  group_by(species, species_latin) %>%
  summarise(total_counted = sum(how_many_counted)) %>%
  ungroup()

```

The second step is to sum up the counts for each year across all of the sub-species so the counts are the same, and then filter to only keep the first instance of each `species` (which, when arranged alphabetically, is the shortest species name):

```{r subspecies}

hamilton_cbc <- hamilton_cbc %>%
  group_by(year, species_latin) %>%
  mutate(how_many_counted = sum(how_many_counted)) %>%
  arrange(year, species) %>%
  filter(row_number() == 1) %>%
  ungroup()

hamilton_cbc %>%
  filter(str_detect(species, "Junco")) %>%
  group_by(species, species_latin) %>%
  summarise(total_counted = sum(how_many_counted)) %>%
  ungroup()

```

Perfect! No more sub-species. The last group of species to deal with is `species` where the name has either a `(` or a `/`:

```{r name_cleaning}

hamilton_cbc %>%
  group_by(species, species_latin) %>%
  summarise(total_counted = sum(how_many_counted)) %>%
  ungroup() %>%
  filter(str_detect(species, "\\(|/"))  # The "|" is an "or" within the regex

```

I am going to make some executive decisions about what to do with these `species`:

1.  Delete species guess: Greater/Lesser Scaup
2.  Assume super-rare species were in fact the more common species:
    -   Bullock's/Baltimore Oriole were Baltimore Orioles
    -   Western/Eastern Meadowlark were Eastern Meadowlarks
    -   Wilson's/Common Snipe were Common Snipes
    -   Spotted/Eastern Towhee (Rufous-sided Towhee) were Eastern Towhees
    -   Pacific/Winter Wren were Winter Wrens
3.  Remove parentheses on the remaining species for neatness

```{r removing_parentheses}

hamilton_cbc <- hamilton_cbc %>%
  filter(!(species == "Greater/Lesser Scaup")) %>%
  mutate(species = case_when(species == "Bullock's/Baltimore Oriole" ~ "Baltimore Oriole",
                             species == "Western/Eastern Meadowlark" ~ "Eastern Meadowlark",
                             species == "Wilson's/Common Snipe" ~ "Common Snipe",
                             species == "Spotted/Eastern Towhee (Rufous-sided Towhee)" ~ "Eastern Towhee",
                             species == "Pacific/Winter Wren" ~ "Winter Wren",
                             TRUE ~ species),
         species_latin = case_when(species_latin == "Icterus bullockii/galbula" ~ "Icterus galbula",
                             species_latin == "Sturnella neglecta/magna" ~ "Sturnella magna",
                             species_latin == "Gallinago delicata/gallinago" ~ "Gallinago gallinago",
                             species_latin == "Pipilo maculatus/erythrophthalmus" ~ "Pipilo erythrophthalmus",
                             species_latin == "Troglodytes pacificus/hiemalis" ~ "Troglodytes hiemalis",
                             TRUE ~ species_latin),
         species = case_when(species == "Barn Owl (American)" ~ "Barn Owl",
                             species == "Great Blue Heron (Blue form)" ~ "Great Blue Heron",
                             species == "Palm Warbler (Western)" ~ "Palm Warbler",
                             species == "Rock Pigeon (Feral Pigeon)" ~ "Rock Pigeon",
                             species == "Yellow-rumped Warbler (Myrtle)" ~ "Yellow-rumped Warbler",
                             TRUE ~ species))

# Consolidate the counts between the species whose names were just updated
# This is the same step as was done in the earlier sub-species section
hamilton_cbc <- hamilton_cbc %>%
  group_by(year, species) %>%
  mutate(how_many_counted = sum(how_many_counted)) %>%
  arrange(year, species) %>%
  filter(row_number() == 1) %>%
  ungroup()

```

Finally, I am going to recalculate the `how_many_counted_by_hour` variable that depends on `how_many_counted`:

```{r recalc_person_hours}

hamilton_cbc <- hamilton_cbc %>%
  mutate(how_many_counted_by_hour = as.double(how_many_counted) / total_hours)

```

## Number of species counted each year

In the course of creating a plot, I believe there was a error in the total hours recorded for 1982, where the total number of hours was only 64, but there was no drop in the number of species counted that year. I think it should have actually been 164 hours, because, in 1981, there were 167 hours, and in 1983, there were 168 hours. So, in the below chunk, I've `mutate`d 1982 to have 164 total hours.

```{r species_and_person_hours}

# Mutating total_hours and how_many_counted_by_hour that depends on it

hamilton_cbc <- hamilton_cbc %>%
  mutate(total_hours = ifelse(year == 1982, 164, total_hours),
         how_many_counted_by_hour = as.double(how_many_counted) / total_hours)

```

If you would like to download this final, cleaned dataset in `.rds` format, you can do so [here](https://github.com/sharleenw/sharleenw.github.io/blob/main/posts/2019-03-24-hamilton-cbc-part-3/hamilton_cbc_shiny/hamilton_cbc_output_part_2.rds).

We are now ready to visualize! Please look at the next post in this series for the visualizing!

And thank you to the Christmas Bird Count! The Christmas Bird Count Data was provided by [National Audubon Society](www.christmasbirdcount.org) and through the generous efforts of [Bird Studies Canada](www.bsc-eoc.org) and countless volunteers across the western hemisphere.

```{r write_the_data, include = FALSE}

hamilton_cbc %>%
  write_rds(here("posts",
                 "2019-03-24-hamilton-cbc-part-3",
                 "hamilton_cbc_shiny", 
                 "hamilton_cbc_output_part_2.rds"))

```

<hr>

# Session info

```{r reproducibility, echo = FALSE}

devtools::session_info()

```
