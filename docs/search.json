[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sharleen’s Data Analysis Blog",
    "section": "",
    "text": "The Global Human Day Analysis\n\n\n\n\n\n\n\ntidytuesday\n\n\neda\n\n\nvisualization\n\n\n\n\nVisualizing how different countries spend their days.\n\n\n\n\n\n\nSep 21, 2023\n\n\nSharleen Weatherley\n\n\n\n\n\n\n  \n\n\n\n\nHow to Remake a Blogdown Blog from Scratch\n\n\n\n\n\n\n\nblogdown\n\n\ntutorial\n\n\n\n\nWhat I learned rebuilding my blogdown blog.\n\n\n\n\n\n\nSep 2, 2020\n\n\nSharleen Weatherley\n\n\n\n\n\n\n  \n\n\n\n\nMaking tables in a PDF using R\n\n\n\n\n\n\n\nRMarkdown\n\n\nkableExtra\n\n\n\n\nA guide on making tables in PDF using RMarkdown and kableExtra.\n\n\n\n\n\n\nSep 1, 2019\n\n\nSharleen Weatherley\n\n\n\n\n\n\n  \n\n\n\n\nHamilton Christmas Bird Count: Part 4\n\n\n\n\n\n\n\ngganimate\n\n\nggplot2\n\n\nbirding\n\n\n\n\nCreating a gganimate plot for the Hamilton Christmas Bird Count data.\n\n\n\n\n\n\nMay 26, 2019\n\n\nSharleen Weatherley\n\n\n\n\n\n\n  \n\n\n\n\nHamilton Christmas Bird Count: Part 3\n\n\n\n\n\n\n\nbirding\n\n\nggplot2\n\n\nshiny\n\n\n\n\nCreating a Shiny app for the Hamilton Christmas Bird Count data.\n\n\n\n\n\n\nMar 24, 2019\n\n\nSharleen Weatherley\n\n\n\n\n\n\n  \n\n\n\n\nHamilton Christmas Bird Count: Part 2b\n\n\n\n\n\n\n\nbirding\n\n\nvisualization\n\n\n\n\nVisualizing the Hamilton Christmas Bird Count data.\n\n\n\n\n\n\nFeb 24, 2019\n\n\nSharleen Weatherley\n\n\n\n\n\n\n  \n\n\n\n\nHamilton Christmas Bird Count: Part 2a\n\n\n\n\n\n\n\ndata cleaning\n\n\nbirding\n\n\n\n\nFurther cleaning of the Hamilton Christmas Bird Count data.\n\n\n\n\n\n\nFeb 23, 2019\n\n\nSharleen Weatherley\n\n\n\n\n\n\n  \n\n\n\n\nHamilton Christmas Bird Count: Part 1\n\n\n\n\n\n\n\ndata cleaning\n\n\nbirding\n\n\n\n\nImporting and cleaning 100 years of the Hamilton Christmas Bird Count data.\n\n\n\n\n\n\nJan 7, 2019\n\n\nSharleen Weatherley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-09-21-global-human-day/index.html",
    "href": "posts/2023-09-21-global-human-day/index.html",
    "title": "The Global Human Day Analysis",
    "section": "",
    "text": "Overview\nGiven the Global Human Day data from TidyTuesday, I will visualize what the average days look like for the two most different countries.\n\n\nSetup\nFirst I will call the necessary packages and read in the data, found at the tidytuesday Github repository.\n\n# Load packages\nlibrary(dplyr)\nlibrary(janitor)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(forcats)\nlibrary(knitr)\n\n# Reading the data in\nall_countries &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-12/all_countries.csv') |&gt; \n  clean_names()\n\ncountry_regions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-09-12/country_regions.csv') |&gt; \n  clean_names()\n\n# Set graph theme\ntheme_set(theme_minimal())\n\n\n\nInitial thoughts\nLooking at the data in the two data frames, my first thoughts are that I will join them together so that I can get country_name into the all_countries data set.\n\nall_countries |&gt; \n  head(5) |&gt;\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\ncategory\nsubcategory\ncountry_iso3\nregion_code\npopulation\nhours_per_day_combined\nuncertainty_combined\n\n\n\n\nFood provision\nFood preparation\nABW\nAM_C\n101665\n1.47\n0.2376303\n\n\nFood provision\nFood growth & collection\nABW\nAM_C\n101665\n0.17\n0.0268798\n\n\nFood provision\nFood processing\nABW\nAM_C\n101665\n0.00\n0.0075265\n\n\nNonfood provision\nMaterials\nABW\nAM_C\n101665\n0.03\n0.0020716\n\n\nNonfood provision\nEnergy\nABW\nAM_C\n101665\n0.05\n0.0035968\n\n\n\n\ncountry_regions |&gt; \n  head(5) |&gt; \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nregion_code\nregion_name\ncountry_name\nm49_code\ncountry_iso2\ncountry_iso3\nalt_country_name\nalt_country_name1\nalt_country_name2\nalt_country_name3\nalt_country_name4\nalt_country_name5\nalt_country_name6\nother_code1\nother_code2\n\n\n\n\nAF_N\nNorthern Africa\nAlgeria\n12\nDZ\nDZA\nAlgeria\nPeople’s Democratic Republic of Algeria\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAF_N\nNorthern Africa\nEgypt\n818\nEG\nEGY\nEgypt\nArab Republic of Egypt\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAF_N\nNorthern Africa\nLibya\n434\nLY\nLBY\nLibya\nState of Libya\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAF_N\nNorthern Africa\nMorocco\n504\nMA\nMAR\nMorocco\nKingdom of Morocco\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAF_N\nNorthern Africa\nSudan\n729\nSD\nSDN\nSudan\nRepublic of the Sudan\nThe Sudan\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\nI also want to peek at the different options for categories and subcategories:\n\nall_countries |&gt; \n  distinct(category, subcategory) |&gt; \n  arrange_all() |&gt; \n  kable()\n\n\n\n\ncategory\nsubcategory\n\n\n\n\nDeliberate neural restructuring\nReligious practice\n\n\nDeliberate neural restructuring\nSchooling & research\n\n\nExperience oriented\nActive recreation\n\n\nExperience oriented\nInteractive\n\n\nExperience oriented\nMeals\n\n\nExperience oriented\nPassive\n\n\nExperience oriented\nSocial\n\n\nFood provision\nFood growth & collection\n\n\nFood provision\nFood preparation\n\n\nFood provision\nFood processing\n\n\nMaintenance of surroundings\nInhabited environment\n\n\nMaintenance of surroundings\nWaste management\n\n\nNonfood provision\nEnergy\n\n\nNonfood provision\nMaterials\n\n\nOrganization\nAllocation\n\n\nOrganization\nHuman transportation\n\n\nOrganization\nMaterial transportation\n\n\nSomatic maintenance\nHealth care\n\n\nSomatic maintenance\nHygiene & grooming\n\n\nSomatic maintenance\nPhysical child care\n\n\nSomatic maintenance\nSleep & bedrest\n\n\nTechnosphere modification\nArtifacts\n\n\nTechnosphere modification\nBuildings\n\n\nTechnosphere modification\nInfrastructure\n\n\n\n\n\n\n\nJoining the two data sets\nThe below left_join will add country_name to the all_countries data set. I’m also going to get rid of some variables I won’t be needing and arrange the data set.\n\nall_countries &lt;- all_countries |&gt;\n  left_join(\n    country_regions |&gt;\n      select(country_iso3,\n             country_name),\n    by = \"country_iso3\") |&gt; \n    select(country_name,\n         category,\n         subcategory,\n         hours_per_day_combined) |&gt; \n  arrange(country_name,\n          category,\n          subcategory)\n\nall_countries |&gt; \n  head(5) |&gt; \n  kable()\n\n\n\n\n\n\n\n\n\n\ncountry_name\ncategory\nsubcategory\nhours_per_day_combined\n\n\n\n\nAfghanistan\nDeliberate neural restructuring\nReligious practice\n0.29\n\n\nAfghanistan\nDeliberate neural restructuring\nSchooling & research\n1.33\n\n\nAfghanistan\nExperience oriented\nActive recreation\n0.23\n\n\nAfghanistan\nExperience oriented\nInteractive\n0.62\n\n\nAfghanistan\nExperience oriented\nMeals\n1.62\n\n\n\n\n\n\n\nAdd an hour variable for the category\nThe hours_per_day_combined variable goes with the subcategory variable. I am going to create an hour variable for the category variable.\n\nall_countries &lt;- all_countries |&gt; \n  rename(subcategory_hours_per_day = hours_per_day_combined) |&gt; \n  group_by(country_name, category) |&gt; \n  mutate(category_hours_per_day = sum(subcategory_hours_per_day),\n         .after = subcategory) |&gt; \n  ungroup()\n\nall_countries |&gt; \n  head(10) |&gt; \n  kable()\n\n\n\n\n\n\n\n\n\n\n\ncountry_name\ncategory\nsubcategory\ncategory_hours_per_day\nsubcategory_hours_per_day\n\n\n\n\nAfghanistan\nDeliberate neural restructuring\nReligious practice\n1.62\n0.29\n\n\nAfghanistan\nDeliberate neural restructuring\nSchooling & research\n1.62\n1.33\n\n\nAfghanistan\nExperience oriented\nActive recreation\n6.32\n0.23\n\n\nAfghanistan\nExperience oriented\nInteractive\n6.32\n0.62\n\n\nAfghanistan\nExperience oriented\nMeals\n6.32\n1.62\n\n\nAfghanistan\nExperience oriented\nPassive\n6.32\n2.05\n\n\nAfghanistan\nExperience oriented\nSocial\n6.32\n1.80\n\n\nAfghanistan\nFood provision\nFood growth & collection\n2.12\n0.88\n\n\nAfghanistan\nFood provision\nFood preparation\n2.12\n1.14\n\n\nAfghanistan\nFood provision\nFood processing\n2.12\n0.10\n\n\n\n\n\n\n\nVisualize the two most different countries\nWhich two countries have the most different days? And how do they compare?\nModifying this Stackoverflow topic, I am going to find the maximum pairwise difference between two countries and plot those two countries’ days.\n\ncountry_pair_diff &lt;- all_countries |&gt; \n  distinct(country_name,\n           category,\n           category_hours_per_day) |&gt; \n  group_by(category) |&gt; \n  reframe(result = combn(seq_along(category_hours_per_day), 2, function(i)\n    list(difference = diff(category_hours_per_day[i]),  #The difference\n         country_pair = paste0(country_name[i], collapse = '-')), # The pairs\n    simplify = FALSE)) |&gt; \n  unnest_wider(result) |&gt; \n  mutate(abs_difference = abs(difference)) |&gt; \n  group_by(country_pair) |&gt; \n  mutate(total_diff_country_pair = sum(abs_difference)) |&gt; \n  ungroup()\n\ncountry_pair_diff |&gt; \n  arrange(country_pair) |&gt; \n  head(10) |&gt; \n  kable()\n\n\n\n\n\n\n\n\n\n\n\ncategory\ndifference\ncountry_pair\nabs_difference\ntotal_diff_country_pair\n\n\n\n\nDeliberate neural restructuring\n-0.52\nAfghanistan-Albania\n0.52\n2.15\n\n\nExperience oriented\n0.53\nAfghanistan-Albania\n0.53\n2.15\n\n\nFood provision\n-0.16\nAfghanistan-Albania\n0.16\n2.15\n\n\nMaintenance of surroundings\n0.16\nAfghanistan-Albania\n0.16\n2.15\n\n\nNonfood provision\n0.03\nAfghanistan-Albania\n0.03\n2.15\n\n\nOrganization\n0.09\nAfghanistan-Albania\n0.09\n2.15\n\n\nSomatic maintenance\n-0.40\nAfghanistan-Albania\n0.40\n2.15\n\n\nTechnosphere modification\n0.26\nAfghanistan-Albania\n0.26\n2.15\n\n\nDeliberate neural restructuring\n-0.20\nAfghanistan-Algeria\n0.20\n2.46\n\n\nExperience oriented\n1.07\nAfghanistan-Algeria\n1.07\n2.46\n\n\n\n\n\nNow I can find the two most different countries. They will have the largest total_diff_country_pair.\n\ncountry_pair_diff |&gt; \n  distinct(country_pair,\n           total_diff_country_pair) |&gt; \n  arrange(-total_diff_country_pair) |&gt; \n  head(20) |&gt; \n  kable()\n\n\n\n\ncountry_pair\ntotal_diff_country_pair\n\n\n\n\nDemocratic Republic of the Congo-Germany\n7.53\n\n\nAngola-Germany\n7.42\n\n\nCameroon-Germany\n7.42\n\n\nCentral African Republic-Germany\n7.42\n\n\nChad-Germany\n7.42\n\n\nEquatorial Guinea-Germany\n7.42\n\n\nGabon-Germany\n7.42\n\n\nGermany-Sao Tome and Principe\n7.42\n\n\nBhutan-Germany\n7.06\n\n\nDemocratic Republic of the Congo-Japan\n6.97\n\n\nDemocratic Republic of the Congo-Switzerland\n6.95\n\n\nDemocratic Republic of the Congo-Sweden\n6.91\n\n\nDemocratic Republic of the Congo-Netherlands\n6.89\n\n\nAngola-Japan\n6.86\n\n\nCameroon-Japan\n6.86\n\n\nCentral African Republic-Japan\n6.86\n\n\nChad-Japan\n6.86\n\n\nEquatorial Guinea-Japan\n6.86\n\n\nGabon-Japan\n6.86\n\n\nJapan-Sao Tome and Principe\n6.86\n\n\n\n\n\n\n\nGraphing the two most different countries\nSo, with our knowledge now that the DRC and Germany have the most different days, let’s plot the difference to see what it looks like:\n\nall_countries |&gt; \n  filter(country_name %in% c(\"Democratic Republic of the Congo\",\n                             \"Germany\")) |&gt; \n  distinct(country_name, category, .keep_all = TRUE) |&gt; \n  mutate(category = category |&gt; \n           as.factor() |&gt; \n           fct_reorder(category_hours_per_day)) |&gt; \n  ggplot() +\n  geom_col(aes(x = category,\n               y = category_hours_per_day,\n               fill = country_name),\n           position = \"dodge2\") +\n  labs(x = \"Category\",\n       y = \"Hours per day\",\n       fill = \"Country name\") +\n  coord_flip()\n\n\n\n\nIt looks like the DRC spends more time on Deliberate neural restructuring, which includes activities like religious practice and schooling and research, whereas Germany spends more time on Experience oriented activities, like active recreation, interactive, social, passive, and meals.\n\n\n\nSession info\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.0 (2023-04-21 ucrt)\n os       Windows 11 x64 (build 22000)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  English_Canada.utf8\n ctype    English_Canada.utf8\n tz       Pacific/Honolulu\n date     2023-09-21\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n bit           4.0.5   2022-11-15 [1] CRAN (R 4.3.0)\n bit64         4.0.5   2020-08-30 [1] CRAN (R 4.3.0)\n cachem        1.0.8   2023-05-01 [1] CRAN (R 4.3.0)\n callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.0)\n cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)\n codetools     0.2-19  2023-02-01 [2] CRAN (R 4.3.0)\n colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)\n crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.0)\n curl          5.0.0   2023-01-12 [1] CRAN (R 4.3.0)\n devtools    * 2.4.5   2022-10-11 [1] CRAN (R 4.3.1)\n digest        0.6.31  2022-12-11 [1] CRAN (R 4.3.0)\n dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)\n ellipsis      0.3.2   2021-04-29 [1] CRAN (R 4.3.0)\n evaluate      0.20    2023-01-17 [1] CRAN (R 4.3.0)\n fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.0)\n farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)\n fastmap       1.1.1   2023-02-24 [1] CRAN (R 4.3.0)\n forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)\n fs            1.6.2   2023-04-25 [1] CRAN (R 4.3.0)\n generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.3   2023-08-14 [1] CRAN (R 4.3.1)\n glue          1.6.2   2022-02-24 [1] CRAN (R 4.3.0)\n gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)\n here        * 1.0.1   2020-12-13 [1] CRAN (R 4.3.0)\n hms           1.1.3   2023-03-21 [1] CRAN (R 4.3.0)\n htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)\n htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.0)\n httpuv        1.6.11  2023-05-11 [1] CRAN (R 4.3.1)\n janitor     * 2.2.0   2023-02-02 [1] CRAN (R 4.3.0)\n jsonlite      1.8.4   2022-12-06 [1] CRAN (R 4.3.0)\n knitr       * 1.42    2023-01-25 [1] CRAN (R 4.3.0)\n labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)\n later         1.3.1   2023-05-02 [1] CRAN (R 4.3.0)\n lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)\n lubridate     1.9.2   2023-02-10 [1] CRAN (R 4.3.0)\n magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)\n memoise       2.0.1   2021-11-26 [1] CRAN (R 4.3.0)\n mime          0.12    2021-09-28 [1] CRAN (R 4.3.0)\n miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.0)\n munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)\n pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild      1.4.0   2022-11-27 [1] CRAN (R 4.3.0)\n pkgconfig     2.0.3   2019-09-22 [1] CRAN (R 4.3.0)\n pkgload       1.3.2   2022-11-16 [1] CRAN (R 4.3.0)\n prettyunits   1.1.1   2020-01-24 [1] CRAN (R 4.3.0)\n processx      3.8.1   2023-04-18 [1] CRAN (R 4.3.0)\n profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.0)\n promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.0)\n ps            1.7.5   2023-04-18 [1] CRAN (R 4.3.0)\n purrr         1.0.1   2023-01-10 [1] CRAN (R 4.3.0)\n R6            2.5.1   2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp          1.0.10  2023-01-22 [1] CRAN (R 4.3.0)\n readr         2.1.4   2023-02-10 [1] CRAN (R 4.3.0)\n remotes       2.4.2   2021-11-30 [1] CRAN (R 4.3.0)\n rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)\n rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)\n rprojroot     2.0.3   2022-04-02 [1] CRAN (R 4.3.0)\n rstudioapi    0.15.0  2023-07-07 [1] CRAN (R 4.3.1)\n scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.1)\n sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n shiny         1.7.4   2022-12-15 [1] CRAN (R 4.3.0)\n snakecase     0.11.0  2019-05-25 [1] CRAN (R 4.3.0)\n stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.0)\n stringr       1.5.0   2022-12-02 [1] CRAN (R 4.3.0)\n tibble        3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)\n tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)\n timechange    0.2.0   2023-01-11 [1] CRAN (R 4.3.0)\n tzdb          0.3.0   2022-03-28 [1] CRAN (R 4.3.0)\n urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.0)\n usethis     * 2.2.2   2023-07-06 [1] CRAN (R 4.3.1)\n utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.0)\n vctrs         0.6.2   2023-04-19 [1] CRAN (R 4.3.0)\n vroom         1.6.3   2023-04-28 [1] CRAN (R 4.3.0)\n withr         2.5.0   2022-03-03 [1] CRAN (R 4.3.0)\n xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)\n xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.0)\n yaml          2.3.7   2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] C:/Users/sharl/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.0/library\n\n──────────────────────────────────────────────────────────────────────────────"
  }
]